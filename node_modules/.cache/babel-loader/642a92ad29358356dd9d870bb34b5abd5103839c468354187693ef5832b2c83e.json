{"ast":null,"code":"import axios from 'axios';\nconst BASIC_AUTH = 'YWEzYzA4NzAtNmUwNC00NTNiLTljYTEtNjhhNTVmNzBlMTgwOm1QTlJhWWVrdXVSd25wUHU=';\nconst mockStocks = {\n  \"stocks\": {\n    \"Advanced Micro Devices, Inc.\": \"AMD\",\n    \"Alphabet Inc. Class A\": \"GOOGL\",\n    \"Alphabet Inc. Class C\": \"GOOG\",\n    \"Amazon.com, Inc.\": \"AMZN\",\n    \"Amgen Inc.\": \"AMGN\",\n    \"Apple Inc.\": \"AAPL\",\n    \"Berkshire Hathaway Inc.\": \"BRKB\",\n    \"Booking Holdings Inc.\": \"BKNG\",\n    \"Broadcom Inc.\": \"AVGO\",\n    \"CSX Corporation\": \"CSX\",\n    \"Eli Lilly and Company\": \"LLY\",\n    \"Marriott International, Inc.\": \"MAR\",\n    \"Marvell Technology, Inc.\": \"MRVL\",\n    \"Meta Platforms, Inc.\": \"META\",\n    \"Microsoft Corporation\": \"MSFT\",\n    \"NVIDIA Corporation\": \"NVDA\",\n    \"PayPal Holdings, Inc.\": \"PYPL\",\n    \"TSMC\": \"2330TW\",\n    \"Tesla, Inc.\": \"TSLA\"\n  }\n};\nconst mockPriceHistory = [{\n  \"price\": \"666.66595\",\n  \"lastUpdatedAt\": \"2025-05-22T06:00:00.465760306Z\"\n}, {\n  \"price\": \"212.94439\",\n  \"lastUpdatedAt\": \"2025-05-22T06:01:00.465210105Z\"\n}, {\n  \"price\": \"163.42203\",\n  \"lastUpdatedAt\": \"2025-05-22T06:02:00.465542126Z\"\n}, {\n  \"price\": \"231.95296\",\n  \"lastUpdatedAt\": \"2025-05-22T06:03:00.46584912Z\"\n}, {\n  \"price\": \"124.95156\",\n  \"lastUpdatedAt\": \"2025-05-22T06:04:00.465940341Z\"\n}, {\n  \"price\": \"459.09558\",\n  \"lastUpdatedAt\": \"2025-05-22T06:05:00.464887447Z\"\n}, {\n  \"price\": \"998.27924\",\n  \"lastUpdatedAt\": \"2025-05-22T06:06:00.464903660Z\"\n}];\nexport const getStocks = async () => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Basic ${BASIC_AUTH}`\n      }\n    };\n    const url = '/stocks/list';\n    console.log('Fetching stocks from URL:', url);\n    console.log('Request headers:', config.headers);\n    const response = await axios.get(url, config);\n    console.log('Stocks API response:', response.data);\n    return response.data.stocks;\n  } catch (error) {\n    console.error('Error fetching stocks:', error.message);\n    if (error.response) {\n      console.log('Response status:', error.response.status);\n      console.log('Response data:', error.response.data);\n      console.log('Response headers:', error.response.headers);\n    }\n    return mockStocks.stocks;\n  }\n};\nexport const getStockPriceHistory = async (ticker, minutes) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Basic ${BASIC_AUTH}`\n      }\n    };\n    const url = `/stocks/price/${ticker}?minutes=${minutes}`;\n    console.log(`Fetching price history from URL: ${url}`);\n    console.log('Request headers:', config.headers);\n    const response = await axios.get(url, config);\n    console.log(`Price history API response for ${ticker}:`, response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching price history for ${ticker}:`, error.message);\n    if (error.response) {\n      console.log('Response status:', error.response.status);\n      console.log('Response data:', error.response.data);\n      console.log('Response headers:', error.response.headers);\n    }\n    return mockPriceHistory;\n  }\n};","map":{"version":3,"names":["axios","BASIC_AUTH","mockStocks","mockPriceHistory","getStocks","config","headers","Authorization","url","console","log","response","get","data","stocks","error","message","status","getStockPriceHistory","ticker","minutes"],"sources":["A:/Development/KavyaFrontedAffordMedical/stock-price-aggregator/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASIC_AUTH = 'YWEzYzA4NzAtNmUwNC00NTNiLTljYTEtNjhhNTVmNzBlMTgwOm1QTlJhWWVrdXVSd25wUHU=';\r\n\r\nconst mockStocks = {\r\n  \"stocks\": {\r\n    \"Advanced Micro Devices, Inc.\": \"AMD\",\r\n    \"Alphabet Inc. Class A\": \"GOOGL\",\r\n    \"Alphabet Inc. Class C\": \"GOOG\",\r\n    \"Amazon.com, Inc.\": \"AMZN\",\r\n    \"Amgen Inc.\": \"AMGN\",\r\n    \"Apple Inc.\": \"AAPL\",\r\n    \"Berkshire Hathaway Inc.\": \"BRKB\",\r\n    \"Booking Holdings Inc.\": \"BKNG\",\r\n    \"Broadcom Inc.\": \"AVGO\",\r\n    \"CSX Corporation\": \"CSX\",\r\n    \"Eli Lilly and Company\": \"LLY\",\r\n    \"Marriott International, Inc.\": \"MAR\",\r\n    \"Marvell Technology, Inc.\": \"MRVL\",\r\n    \"Meta Platforms, Inc.\": \"META\",\r\n    \"Microsoft Corporation\": \"MSFT\",\r\n    \"NVIDIA Corporation\": \"NVDA\",\r\n    \"PayPal Holdings, Inc.\": \"PYPL\",\r\n    \"TSMC\": \"2330TW\",\r\n    \"Tesla, Inc.\": \"TSLA\"\r\n  }\r\n};\r\n\r\nconst mockPriceHistory = [\r\n  { \"price\": \"666.66595\", \"lastUpdatedAt\": \"2025-05-22T06:00:00.465760306Z\" },\r\n  { \"price\": \"212.94439\", \"lastUpdatedAt\": \"2025-05-22T06:01:00.465210105Z\" },\r\n  { \"price\": \"163.42203\", \"lastUpdatedAt\": \"2025-05-22T06:02:00.465542126Z\" },\r\n  { \"price\": \"231.95296\", \"lastUpdatedAt\": \"2025-05-22T06:03:00.46584912Z\" },\r\n  { \"price\": \"124.95156\", \"lastUpdatedAt\": \"2025-05-22T06:04:00.465940341Z\" },\r\n  { \"price\": \"459.09558\", \"lastUpdatedAt\": \"2025-05-22T06:05:00.464887447Z\" },\r\n  { \"price\": \"998.27924\", \"lastUpdatedAt\": \"2025-05-22T06:06:00.464903660Z\" }\r\n];\r\n\r\nexport const getStocks = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Basic ${BASIC_AUTH}`,\r\n      },\r\n    };\r\n    const url = '/stocks/list';\r\n    console.log('Fetching stocks from URL:', url);\r\n    console.log('Request headers:', config.headers);\r\n    const response = await axios.get(url, config);\r\n    console.log('Stocks API response:', response.data);\r\n    return response.data.stocks;\r\n  } catch (error) {\r\n    console.error('Error fetching stocks:', error.message);\r\n    if (error.response) {\r\n      console.log('Response status:', error.response.status);\r\n      console.log('Response data:', error.response.data);\r\n      console.log('Response headers:', error.response.headers);\r\n    }\r\n    return mockStocks.stocks;\r\n  }\r\n};\r\n\r\nexport const getStockPriceHistory = async (ticker, minutes) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Basic ${BASIC_AUTH}`,\r\n      },\r\n    };\r\n    const url = `/stocks/price/${ticker}?minutes=${minutes}`;\r\n    console.log(`Fetching price history from URL: ${url}`);\r\n    console.log('Request headers:', config.headers);\r\n    const response = await axios.get(url, config);\r\n    console.log(`Price history API response for ${ticker}:`, response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching price history for ${ticker}:`, error.message);\r\n    if (error.response) {\r\n      console.log('Response status:', error.response.status);\r\n      console.log('Response data:', error.response.data);\r\n      console.log('Response headers:', error.response.headers);\r\n    }\r\n    return mockPriceHistory;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}