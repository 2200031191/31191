{"ast":null,"code":"export const covariance = (x, y) => {\n  const n = x.length;\n  if (n !== y.length || n <= 1) return 0;\n  const meanX = x.reduce((sum, val) => sum + val, 0) / n;\n  const meanY = y.reduce((sum, val) => sum + val, 0) / n;\n  let cov = 0;\n  for (let i = 0; i < n; i++) {\n    cov += (x[i] - meanX) * (y[i] - meanY);\n  }\n  return cov / (n - 1);\n};\nexport const standardDeviation = x => {\n  const n = x.length;\n  if (n <= 1) return 0;\n  const mean = x.reduce((sum, val) => sum + val, 0) / n;\n  const variance = x.reduce((sum, val) => sum + (val - mean) ** 2, 0) / (n - 1);\n  return Math.sqrt(variance);\n};\nexport const pearsonCorrelation = (x, y) => {\n  const cov = covariance(x, y);\n  const stdX = standardDeviation(x);\n  const stdY = standardDeviation(y);\n  if (stdX === 0 || stdY === 0) return 0;\n  return cov / (stdX * stdY);\n};","map":{"version":3,"names":["covariance","x","y","n","length","meanX","reduce","sum","val","meanY","cov","i","standardDeviation","mean","variance","Math","sqrt","pearsonCorrelation","stdX","stdY"],"sources":["A:/Development/KavyaFrontedAffordMedical/stock-price-aggregator/src/utils/math.js"],"sourcesContent":["export const covariance = (x, y) => {\r\n    const n = x.length;\r\n    if (n !== y.length || n <= 1) return 0;\r\n    const meanX = x.reduce((sum, val) => sum + val, 0) / n;\r\n    const meanY = y.reduce((sum, val) => sum + val, 0) / n;\r\n    let cov = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      cov += (x[i] - meanX) * (y[i] - meanY);\r\n    }\r\n    return cov / (n - 1);\r\n  };\r\n  \r\n  export const standardDeviation = (x) => {\r\n    const n = x.length;\r\n    if (n <= 1) return 0;\r\n    const mean = x.reduce((sum, val) => sum + val, 0) / n;\r\n    const variance = x.reduce((sum, val) => sum + (val - mean) ** 2, 0) / (n - 1);\r\n    return Math.sqrt(variance);\r\n  };\r\n  \r\n  export const pearsonCorrelation = (x, y) => {\r\n    const cov = covariance(x, y);\r\n    const stdX = standardDeviation(x);\r\n    const stdY = standardDeviation(y);\r\n    if (stdX === 0 || stdY === 0) return 0;\r\n    return cov / (stdX * stdY);\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAChC,MAAMC,CAAC,GAAGF,CAAC,CAACG,MAAM;EAClB,IAAID,CAAC,KAAKD,CAAC,CAACE,MAAM,IAAID,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EACtC,MAAME,KAAK,GAAGJ,CAAC,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,GAAGL,CAAC;EACtD,MAAMM,KAAK,GAAGP,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,GAAGL,CAAC;EACtD,IAAIO,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,CAAC,EAAEQ,CAAC,EAAE,EAAE;IAC1BD,GAAG,IAAI,CAACT,CAAC,CAACU,CAAC,CAAC,GAAGN,KAAK,KAAKH,CAAC,CAACS,CAAC,CAAC,GAAGF,KAAK,CAAC;EACxC;EACA,OAAOC,GAAG,IAAIP,CAAC,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAIX,CAAC,IAAK;EACtC,MAAME,CAAC,GAAGF,CAAC,CAACG,MAAM;EAClB,IAAID,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EACpB,MAAMU,IAAI,GAAGZ,CAAC,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,GAAGL,CAAC;EACrD,MAAMW,QAAQ,GAAGb,CAAC,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAG,CAACC,GAAG,GAAGK,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAIV,CAAC,GAAG,CAAC,CAAC;EAC7E,OAAOY,IAAI,CAACC,IAAI,CAACF,QAAQ,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAGA,CAAChB,CAAC,EAAEC,CAAC,KAAK;EAC1C,MAAMQ,GAAG,GAAGV,UAAU,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC5B,MAAMgB,IAAI,GAAGN,iBAAiB,CAACX,CAAC,CAAC;EACjC,MAAMkB,IAAI,GAAGP,iBAAiB,CAACV,CAAC,CAAC;EACjC,IAAIgB,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,EAAE,OAAO,CAAC;EACtC,OAAOT,GAAG,IAAIQ,IAAI,GAAGC,IAAI,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}