{"ast":null,"code":"var _jsxFileName = \"A:\\\\Development\\\\KavyaFrontedAffordMedical\\\\stock-price-aggregator\\\\src\\\\pages\\\\StockPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getStocks, getStockPriceHistory } from '../services/api';\nimport { getCachedData, setCachedData } from '../utils/cache';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StockPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [selectedStock, setSelectedStock] = useState('');\n  const [minutes, setMinutes] = useState(10);\n  const [priceData, setPriceData] = useState([]);\n  const [averagePrice, setAveragePrice] = useState(null);\n  useEffect(() => {\n    const fetchStocks = async () => {\n      const cachedStocks = getCachedData('stocks');\n      if (cachedStocks) {\n        setStocks(cachedStocks);\n      } else {\n        const data = await getStocks();\n        setStocks(data);\n        setCachedData('stocks', data);\n      }\n    };\n    fetchStocks();\n  }, []);\n  const fetchPriceHistory = debounce(async () => {\n    if (!selectedStock) return;\n    const cacheKey = `${selectedStock}-${minutes}`;\n    const cachedData = getCachedData(cacheKey);\n    if (cachedData) {\n      setPriceData(cachedData);\n      calculateAverage(cachedData);\n    } else {\n      const data = await getStockPriceHistory(selectedStock, minutes);\n      setPriceData(data);\n      setCachedData(cacheKey, data);\n      calculateAverage(data);\n    }\n  }, 500);\n  const calculateAverage = data => {\n    if (data.length === 0) return;\n    const total = data.reduce((sum, entry) => sum + parseFloat(entry.price), 0);\n    const avg = total / data.length;\n    setAveragePrice(avg);\n  };\n  const chartData = priceData.map(entry => ({\n    time: new Date(entry.lastUpdatedAt).toLocaleTimeString(),\n    price: parseFloat(entry.price)\n  }));\n  const averageLineData = chartData.map(entry => ({\n    time: entry.time,\n    average: averagePrice\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      style: {\n        margin: '10px',\n        minWidth: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Select Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedStock,\n        onChange: e => setSelectedStock(e.target.value),\n        label: \"Select Stock\",\n        children: Object.entries(stocks).map(([name, ticker]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: ticker,\n          children: name\n        }, ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Minutes\",\n      type: \"number\",\n      value: minutes,\n      onChange: e => setMinutes(e.target.value),\n      style: {\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: fetchPriceHistory,\n      style: {\n        margin: '10px'\n      },\n      children: \"Fetch Price History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LineChart, {\n        width: 800,\n        height: 400,\n        data: chartData,\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#8884d8\",\n          name: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), averagePrice && /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          data: averageLineData,\n          dataKey: \"average\",\n          stroke: \"#ff7300\",\n          name: \"Average Price\",\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Price: \", averagePrice === null || averagePrice === void 0 ? void 0 : averagePrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(StockPage, \"ns1Wsi6C4BrFwQ3mZnLBHrgA1qA=\");\n_c = StockPage;\nexport default StockPage;\nvar _c;\n$RefreshReg$(_c, \"StockPage\");","map":{"version":3,"names":["React","useState","useEffect","getStocks","getStockPriceHistory","getCachedData","setCachedData","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","TextField","Button","MenuItem","Select","InputLabel","FormControl","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","StockPage","_s","stocks","setStocks","selectedStock","setSelectedStock","minutes","setMinutes","priceData","setPriceData","averagePrice","setAveragePrice","fetchStocks","cachedStocks","data","fetchPriceHistory","cacheKey","cachedData","calculateAverage","length","total","reduce","sum","entry","parseFloat","price","avg","chartData","map","time","Date","lastUpdatedAt","toLocaleTimeString","averageLineData","average","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","minWidth","value","onChange","e","target","label","Object","entries","name","ticker","type","variant","onClick","width","height","strokeDasharray","dataKey","stroke","dot","toFixed","_c","$RefreshReg$"],"sources":["A:/Development/KavyaFrontedAffordMedical/stock-price-aggregator/src/pages/StockPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getStocks, getStockPriceHistory } from '../services/api';\r\nimport { getCachedData, setCachedData } from '../utils/cache';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\r\nimport { debounce } from 'lodash';\r\n\r\nconst StockPage = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [selectedStock, setSelectedStock] = useState('');\r\n  const [minutes, setMinutes] = useState(10);\r\n  const [priceData, setPriceData] = useState([]);\r\n  const [averagePrice, setAveragePrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStocks = async () => {\r\n      const cachedStocks = getCachedData('stocks');\r\n      if (cachedStocks) {\r\n        setStocks(cachedStocks);\r\n      } else {\r\n        const data = await getStocks();\r\n        setStocks(data);\r\n        setCachedData('stocks', data);\r\n      }\r\n    };\r\n    fetchStocks();\r\n  }, []);\r\n\r\n  const fetchPriceHistory = debounce(async () => {\r\n    if (!selectedStock) return;\r\n    const cacheKey = `${selectedStock}-${minutes}`;\r\n    const cachedData = getCachedData(cacheKey);\r\n    if (cachedData) {\r\n      setPriceData(cachedData);\r\n      calculateAverage(cachedData);\r\n    } else {\r\n      const data = await getStockPriceHistory(selectedStock, minutes);\r\n      setPriceData(data);\r\n      setCachedData(cacheKey, data);\r\n      calculateAverage(data);\r\n    }\r\n  }, 500);\r\n\r\n  const calculateAverage = (data) => {\r\n    if (data.length === 0) return;\r\n    const total = data.reduce((sum, entry) => sum + parseFloat(entry.price), 0);\r\n    const avg = total / data.length;\r\n    setAveragePrice(avg);\r\n  };\r\n\r\n  const chartData = priceData.map((entry) => ({\r\n    time: new Date(entry.lastUpdatedAt).toLocaleTimeString(),\r\n    price: parseFloat(entry.price),\r\n  }));\r\n\r\n  const averageLineData = chartData.map((entry) => ({\r\n    time: entry.time,\r\n    average: averagePrice,\r\n  }));\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Stock Price Chart</h2>\r\n      <FormControl style={{ margin: '10px', minWidth: 200 }}>\r\n        <InputLabel>Select Stock</InputLabel>\r\n        <Select\r\n          value={selectedStock}\r\n          onChange={(e) => setSelectedStock(e.target.value)}\r\n          label=\"Select Stock\"\r\n        >\r\n          {Object.entries(stocks).map(([name, ticker]) => (\r\n            <MenuItem key={ticker} value={ticker}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        label=\"Minutes\"\r\n        type=\"number\"\r\n        value={minutes}\r\n        onChange={(e) => setMinutes(e.target.value)}\r\n        style={{ margin: '10px' }}\r\n      />\r\n      <Button variant=\"contained\" onClick={fetchPriceHistory} style={{ margin: '10px' }}>\r\n        Fetch Price History\r\n      </Button>\r\n      {chartData.length > 0 && (\r\n        <>\r\n          <LineChart width={800} height={400} data={chartData} style={{ margin: '20px 0' }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" name=\"Price\" />\r\n            {averagePrice && (\r\n              <Line\r\n                type=\"monotone\"\r\n                data={averageLineData}\r\n                dataKey=\"average\"\r\n                stroke=\"#ff7300\"\r\n                name=\"Average Price\"\r\n                dot={false}\r\n              />\r\n            )}\r\n          </LineChart>\r\n          <p>Average Price: {averagePrice?.toFixed(2)}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}